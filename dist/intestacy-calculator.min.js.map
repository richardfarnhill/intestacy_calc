{"version":3,"file":"intestacy-calculator.min.js","sources":["../src/core/IntestacyCalculator.js","../src/ui/IntestacyUI.js","../src/core/ValidationUtils.js","../src/integration/IntestacyWidget.js"],"sourcesContent":["/**\r\n * IntestacyCalculator.js\r\n * Core logic for the UK intestacy calculator\r\n */\r\n\r\nclass IntestacyCalculator {\r\n  constructor() {\r\n    // Updated to the latest statutory legacy amount\r\n    this.STATUTORY_LEGACY = 322000.00;\r\n    \r\n    // Initialize state\r\n    this.state = {\r\n      name: null,\r\n      estateValue: null,\r\n      married: null,\r\n      cohabiting: null, // New property for cohabiting status\r\n      children: null,\r\n      grandchildren: null,\r\n      greatGrandchildren: null,\r\n      parentsAlive: null,\r\n      siblings: null,\r\n      fullSiblings: null,\r\n      halfSiblings: null,\r\n      grandparents: null,\r\n      auntsUncles: null,\r\n      fullAuntsUncles: null,\r\n      halfAuntsUncles: null,\r\n      currentQuestion: 0,\r\n      childrenDeceased: null,\r\n      deceasedChildrenHadChildren: null,\r\n      siblingsDeceasedWithChildren: null,\r\n      auntsUnclesDeceasedWithChildren: null\r\n    };\r\n    \r\n    // Define questions\r\n    this.questions = [\r\n      { id: \"married\", text: \"Are you married or in a civil partnership?\" },\r\n      { id: \"children\", text: \"Do you have any children?\" },\r\n      { id: \"childrenDeceased\", text: \"Are any of your children deceased?\" },\r\n      { id: \"deceasedChildrenHadChildren\", text: \"Did any of your deceased children have children of their own?\" },\r\n      { id: \"parentsAlive\", text: \"Are either of your parents alive?\" },\r\n      { id: \"siblings\", text: \"Do you have any siblings?\" },\r\n      { id: \"fullSiblings\", text: \"Do you have any full siblings (same two parents)?\" },\r\n      { id: \"siblingsDeceasedWithChildren\", text: \"Are any of your siblings deceased with children of their own?\" },\r\n      { id: \"halfSiblings\", text: \"Do you have any half siblings (one shared parent)?\" },\r\n      { id: \"grandparents\", text: \"Do you have any living grandparents?\" },\r\n      { id: \"auntsUncles\", text: \"Do you have any living aunts or uncles?\" },\r\n      { id: \"fullAuntsUncles\", text: \"Do you have any full aunts or uncles (siblings of your parents)?\" },\r\n      { id: \"auntsUnclesDeceasedWithChildren\", text: \"Are any of your aunts or uncles deceased with children of their own?\" },\r\n      { id: \"halfAuntsUncles\", text: \"Do you have any half aunts or uncles (half-siblings of your parents)?\" }\r\n    ];\r\n    \r\n    // Create a lookup for questions by ID\r\n    this.questionMap = this.createQuestionMap();\r\n    \r\n    // Define the question flow logic\r\n    this.questionFlow = this.defineQuestionFlow();\r\n  }\r\n  \r\n  /**\r\n   * Create a map of questions by ID for easy lookup\r\n   */\r\n  createQuestionMap() {\r\n    const map = {};\r\n    this.questions.forEach(question => {\r\n      map[question.id] = question;\r\n    });\r\n    return map;\r\n  }\r\n  \r\n  /**\r\n   * Define the question flow logic\r\n   */\r\n  defineQuestionFlow() {\r\n    return {\r\n      \"married\": answer => answer ? \"children\" : \"children\",\r\n      \"children\": answer => answer ? \"childrenDeceased\" : \"parentsAlive\",\r\n      \"childrenDeceased\": answer => answer ? \"deceasedChildrenHadChildren\" : null,\r\n      \"deceasedChildrenHadChildren\": answer => null,\r\n      \"parentsAlive\": answer => answer ? null : \"siblings\",\r\n      \"siblings\": answer => answer ? \"fullSiblings\" : \"grandparents\",\r\n      \"fullSiblings\": answer => answer ? \"siblingsDeceasedWithChildren\" : \"halfSiblings\",\r\n      \"siblingsDeceasedWithChildren\": answer => null,\r\n      \"halfSiblings\": answer => null,\r\n      \"grandparents\": answer => answer ? null : \"auntsUncles\",\r\n      \"auntsUncles\": answer => answer ? \"fullAuntsUncles\" : null,\r\n      \"fullAuntsUncles\": answer => answer ? \"auntsUnclesDeceasedWithChildren\" : \"halfAuntsUncles\",\r\n      \"auntsUnclesDeceasedWithChildren\": answer => null,\r\n      \"halfAuntsUncles\": answer => null\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Validate the estate value input\r\n   * @param {number} value - The estate value to validate\r\n   * @returns {Object} - Object with isValid and errorMessage properties\r\n   */\r\n  validateEstateValue(value) {\r\n    try {\r\n      if (value === null || value === undefined) {\r\n        return { isValid: false, errorMessage: \"Please enter your estate value\" };\r\n      }\r\n      \r\n      value = parseFloat(value);\r\n      \r\n      if (isNaN(value)) {\r\n        return { isValid: false, errorMessage: \"Please enter a valid number\" };\r\n      }\r\n      \r\n      if (value <= 0) {\r\n        return { isValid: false, errorMessage: \"Your estate value must be greater than £0\" };\r\n      }\r\n      \r\n      return { isValid: true, errorMessage: \"\" };\r\n    } catch (error) {\r\n      return { isValid: false, errorMessage: \"Please enter a valid number\" };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Format amount as currency with £ symbol\r\n   * @param {number} amount - The amount to format\r\n   * @returns {string} - Formatted currency string\r\n   */\r\n  formatCurrency(amount) {\r\n    return new Intl.NumberFormat('en-GB', { \r\n      style: 'currency', \r\n      currency: 'GBP' \r\n    }).format(amount);\r\n  }\r\n  \r\n  /**\r\n   * Calculate the distribution of the estate based on the current state\r\n   * @returns {string} - Description of how the estate will be distributed\r\n   */\r\n  calculateDistribution() {\r\n    const estateValue = parseFloat(this.state.estateValue);\r\n    const formattedValue = this.formatCurrency(estateValue);\r\n    \r\n    // Cohabiting warning - check this before spouse rules\r\n    if (this.state.cohabiting) {\r\n      return (\r\n        `<div class=\"intestacy-cohabiting-warning\">` +\r\n        `Warning: As a cohabiting partner, you have no automatic inheritance rights under UK law.` +\r\n        `</div>\\n\\n` +\r\n        `Your estate of ${formattedValue} will be distributed as follows:\\n` +\r\n        `• Your cohabiting partner will not automatically inherit anything\\n` +\r\n        `• Your estate will pass to your relatives according to intestacy rules:\\n` +\r\n        this.getInheritanceHierarchyText(estateValue) +\r\n        `\\n\\nTo protect your partner, you should create a valid Will.`\r\n      );\r\n    }\r\n    \r\n    // Spouse rules\r\n    if (this.state.married) {\r\n      if (!this.state.children) {\r\n        return `Your entire estate of ${formattedValue} will pass to your spouse/civil partner.`;\r\n      } else {\r\n        if (estateValue <= this.STATUTORY_LEGACY) {\r\n          return `Your entire estate of ${formattedValue} will pass to your spouse/civil partner.`;\r\n        }\r\n        \r\n        const remainder = estateValue - this.STATUTORY_LEGACY;\r\n        const spouseShare = this.STATUTORY_LEGACY + (remainder / 2);\r\n        const childrenShare = remainder / 2;\r\n        \r\n        // Improved text for per stirpes distribution\r\n        const childrenText = !this.state.childrenDeceased \r\n          ? \"children\" \r\n          : \"living children and the children of your deceased children (who will share their parent's portion per stirpes)\";\r\n        \r\n        return (\r\n          `Your estate will be distributed as follows:\\n` +\r\n          `• Your spouse/civil partner will receive: ${this.formatCurrency(spouseShare)}\\n` +\r\n          `  - First ${this.formatCurrency(this.STATUTORY_LEGACY)} as statutory legacy\\n` +\r\n          `  - Plus ${this.formatCurrency(remainder / 2)} (half of the remainder)\\n` +\r\n          `• Your ${childrenText} will share: ${this.formatCurrency(childrenShare)}`\r\n        );\r\n      }\r\n    }\r\n    \r\n    // Non-spouse rules in strict order of precedence\r\n    if (this.state.children) {\r\n      const childrenText = !this.state.childrenDeceased \r\n        ? \"children\" \r\n        : \"living children and the children of your deceased children (who will share their parent's portion per stirpes)\";\r\n      \r\n      return `Your entire estate of ${formattedValue} will be divided equally between your ${childrenText}.`;\r\n    }\r\n    \r\n    if (this.state.parentsAlive) {\r\n      return `Your entire estate of ${formattedValue} will pass to your surviving parent(s) in equal shares.`;\r\n    }\r\n    \r\n    // Improved sibling handling with full vs half distinction\r\n    if (this.state.siblings) {\r\n      if (this.state.fullSiblings) {\r\n        const siblingType = \"full siblings\";\r\n        const childrenText = this.state.siblingsDeceasedWithChildren \r\n          ? \" (their children will inherit their share per stirpes)\" \r\n          : \"\";\r\n        \r\n        return `Your entire estate of ${formattedValue} will be divided equally between your ${siblingType}${childrenText}.`;\r\n      } else if (this.state.halfSiblings) {\r\n        return `Your entire estate of ${formattedValue} will be divided equally between your half-siblings.`;\r\n      }\r\n    }\r\n    \r\n    if (this.state.grandparents) {\r\n      return `Your entire estate of ${formattedValue} will be divided equally between your grandparents.`;\r\n    }\r\n    \r\n    // Improved aunts/uncles handling with full vs half distinction\r\n    if (this.state.auntsUncles) {\r\n      if (this.state.fullAuntsUncles) {\r\n        const auntsText = \"aunts and uncles\";\r\n        const childrenText = this.state.auntsUnclesDeceasedWithChildren \r\n          ? \" (their children will inherit their share per stirpes)\" \r\n          : \"\";\r\n        \r\n        return `Your entire estate of ${formattedValue} will be divided equally between your ${auntsText}${childrenText}.`;\r\n      } else if (this.state.halfAuntsUncles) {\r\n        return `Your entire estate of ${formattedValue} will be divided equally between your half-aunts and half-uncles.`;\r\n      }\r\n    }\r\n    \r\n    return `Your estate of ${formattedValue} will pass to the Crown (Bona Vacantia).`;\r\n  }\r\n  \r\n  /**\r\n   * Process the user's answer to a specific question and determine the next question\r\n   * @param {string} questionId - The ID of the question being answered\r\n   * @param {boolean} answer - The user's answer (true for Yes, false for No)\r\n   * @returns {string|null} - The ID of the next question to ask, or null if we have enough information\r\n   */\r\n  processAnswer(questionId, answer) {\r\n    // Update the state with the user's answer\r\n    this.state[questionId] = answer;\r\n    \r\n    // Determine the next question based on the flow logic\r\n    if (this.questionFlow[questionId]) {\r\n      const nextQuestionId = this.questionFlow[questionId](answer);\r\n      return nextQuestionId;\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  /**\r\n   * Get the text for a specific question by ID\r\n   * @param {string} questionId - The ID of the question\r\n   * @returns {string} - The question text\r\n   */\r\n  getQuestionText(questionId) {\r\n    if (this.questionMap[questionId]) {\r\n      return this.questionMap[questionId].text;\r\n    }\r\n    return \"Unknown question\";\r\n  }\r\n  \r\n  /**\r\n   * Generate text describing the inheritance hierarchy for cohabiting cases\r\n   * @param {number} estateValue - The value of the estate\r\n   * @returns {string} - Description of how the estate will be distributed\r\n   */\r\n  getInheritanceHierarchyText(estateValue) {\r\n    const formattedValue = this.formatCurrency(estateValue);\r\n    \r\n    if (this.state.children) {\r\n      const childrenText = !this.state.childrenDeceased\r\n        ? \"children\"\r\n        : \"living children and the children of your deceased children (who will share their parent's portion per stirpes)\";\r\n      \r\n      return `  - Your entire estate of ${formattedValue} will be divided equally between your ${childrenText}.`;\r\n    }\r\n    \r\n    if (this.state.parentsAlive) {\r\n      return `  - Your entire estate of ${formattedValue} will pass to your surviving parent(s) in equal shares.`;\r\n    }\r\n    \r\n    if (this.state.siblings) {\r\n      if (this.state.fullSiblings) {\r\n        const siblingType = \"full siblings\";\r\n        const childrenText = this.state.siblingsDeceasedWithChildren\r\n          ? \" (their children will inherit their share per stirpes)\"\r\n          : \"\";\r\n        \r\n        return `  - Your entire estate of ${formattedValue} will be divided equally between your ${siblingType}${childrenText}.`;\r\n      } else if (this.state.halfSiblings) {\r\n        return `  - Your entire estate of ${formattedValue} will be divided equally between your half-siblings.`;\r\n      }\r\n    }\r\n    \r\n    if (this.state.grandparents) {\r\n      return `  - Your entire estate of ${formattedValue} will be divided equally between your grandparents.`;\r\n    }\r\n    \r\n    if (this.state.auntsUncles) {\r\n      if (this.state.fullAuntsUncles) {\r\n        const auntsText = \"aunts and uncles\";\r\n        const childrenText = this.state.auntsUnclesDeceasedWithChildren\r\n          ? \" (their children will inherit their share per stirpes)\"\r\n          : \"\";\r\n        \r\n        return `  - Your entire estate of ${formattedValue} will be divided equally between your ${auntsText}${childrenText}.`;\r\n      } else if (this.state.halfAuntsUncles) {\r\n        return `  - Your entire estate of ${formattedValue} will be divided equally between your half-aunts and half-uncles.`;\r\n      }\r\n    }\r\n    \r\n    return `  - Your estate of ${formattedValue} will pass to the Crown (Bona Vacantia).`;\r\n  }\r\n\r\n  /**\r\n   * Check if we have enough information to determine distribution\r\n   * @returns {boolean} - True if we can determine distribution, false otherwise\r\n   */\r\n  canDetermineDistribution() {\r\n    if (this.state.married && !this.state.children) {\r\n      return true;\r\n    }\r\n    \r\n    if (this.state.children) {\r\n      return (\r\n        this.state.childrenDeceased !== null && \r\n        (!this.state.childrenDeceased || this.state.deceasedChildrenHadChildren !== null)\r\n      );\r\n    }\r\n    \r\n    // Check the full hierarchy\r\n    return [\r\n      this.state.parentsAlive !== null && this.state.parentsAlive,\r\n      this.state.fullSiblings !== null && this.state.fullSiblings,\r\n      this.state.halfSiblings !== null && this.state.halfSiblings,\r\n      this.state.grandparents !== null && this.state.grandparents,\r\n      this.state.fullAuntsUncles !== null && this.state.fullAuntsUncles,\r\n      this.state.halfAuntsUncles !== null && this.state.halfAuntsUncles\r\n    ].some(condition => condition);\r\n  }\r\n}\r\n\r\n// Export the class for use in other modules\r\nexport default IntestacyCalculator;","/**\r\n * IntestacyUI.js\r\n * Main UI controller for the intestacy calculator\r\n */\r\n\r\nimport IntestacyCalculator from '../core/IntestacyCalculator.js';\r\nimport { validateEstateValue, validateName, stringToBoolean } from '../core/ValidationUtils.js';\r\n\r\nclass IntestacyUI {\r\n  /**\r\n   * Create a new IntestacyUI instance\r\n   * @param {HTMLElement|string} container - The container element or selector\r\n   * @param {Object} options - Configuration options\r\n   */\r\n  constructor(container, options = {}) {\r\n    // Get the container element\r\n    this.container = typeof container === 'string' \r\n      ? document.querySelector(container) \r\n      : container;\r\n    \r\n    if (!this.container) {\r\n      throw new Error('Container element not found');\r\n    }\r\n    \r\n    // Default options\r\n    this.options = {\r\n      theme: 'light',\r\n      contactInfo: 'Please contact us to discuss creating a Will.',\r\n      ...options\r\n    };\r\n    \r\n    // Create calculator instance\r\n    this.calculator = new IntestacyCalculator();\r\n    \r\n    // UI state\r\n    this.state = {\r\n      currentStep: 'name',\r\n      questionId: null,\r\n      name: '',\r\n      estateValue: null\r\n    };\r\n    \r\n    // UI elements\r\n    this.elements = {};\r\n    \r\n    // Initialize the UI\r\n    this.init();\r\n  }\r\n  \r\n  /**\r\n   * Initialize the UI\r\n   */\r\n  init() {\r\n    // Create the UI structure\r\n    this.createUIStructure();\r\n    \r\n    // Add event listeners\r\n    this.addEventListeners();\r\n    \r\n    // Apply theme\r\n    this.applyTheme();\r\n    \r\n    // Show the first step (name input)\r\n    this.showNameInput();\r\n  }\r\n  \r\n  /**\r\n   * Create the UI structure\r\n   */\r\n  createUIStructure() {\r\n    // Clear the container\r\n    this.container.innerHTML = '';\r\n    \r\n    // Add CSS class to container\r\n    this.container.classList.add('intestacy-calculator');\r\n    \r\n    // Set contact info\r\n    this.options.contactPhone = this.options.contactPhone || '0123 456 7890';\r\n    this.options.contactEmail = this.options.contactEmail || 'info@example.com';\r\n    \r\n    // Create header\r\n    const header = document.createElement('div');\r\n    header.className = 'intestacy-header';\r\n    header.innerHTML = `\r\n      <h1>UK Intestacy Calculator</h1>\r\n      <p>Find out how your estate would be distributed if you die without a will</p>\r\n    `;\r\n    this.container.appendChild(header);\r\n    \r\n    \r\n    // Create cohabiting warning (hidden by default)\r\n    const cohabitingWarning = document.createElement('div');\r\n    cohabitingWarning.className = 'intestacy-cohabiting-warning';\r\n    cohabitingWarning.style.display = 'none';\r\n    cohabitingWarning.innerHTML = `\r\n      <strong>WARNING:</strong> As a cohabiting partner, you have NO automatic inheritance rights under UK law.\r\n      <p>Your partner will NOT automatically inherit anything from your estate if you die without a will.</p>\r\n      <p>To protect your partner, you should create a valid Will as soon as possible.</p>\r\n      <p class=\"intestacy-contact-highlight\">Contact our firm at <strong>${this.options.contactPhone}</strong> or <strong>${this.options.contactEmail}</strong> to discuss creating a Will.</p>\r\n    `;\r\n    this.container.appendChild(cohabitingWarning);\r\n    this.elements.cohabitingWarning = cohabitingWarning;\r\n    // Create main content area\r\n    const content = document.createElement('div');\r\n    content.className = 'intestacy-content';\r\n    this.container.appendChild(content);\r\n    this.elements.content = content;\r\n    \r\n    // Create name input\r\n    const nameSection = document.createElement('div');\r\n    nameSection.className = 'intestacy-section intestacy-name-section';\r\n    nameSection.innerHTML = `\r\n      <label for=\"intestacy-name\">What is your name?</label>\r\n      <input type=\"text\" id=\"intestacy-name\" placeholder=\"Enter your full name\">\r\n      <div class=\"intestacy-error\" id=\"intestacy-name-error\"></div>\r\n    `;\r\n    content.appendChild(nameSection);\r\n    this.elements.nameSection = nameSection;\r\n    this.elements.nameInput = nameSection.querySelector('#intestacy-name');\r\n    this.elements.nameError = nameSection.querySelector('#intestacy-name-error');\r\n    \r\n    // Create estate value input\r\n    const estateSection = document.createElement('div');\r\n    estateSection.className = 'intestacy-section intestacy-estate-section';\r\n    estateSection.innerHTML = `\r\n      <label for=\"intestacy-estate\">What is the approximate value of your estate (£)?</label>\r\n      <input type=\"number\" id=\"intestacy-estate\" placeholder=\"Enter value in pounds\">\r\n      <div class=\"intestacy-error\" id=\"intestacy-estate-error\"></div>\r\n    `;\r\n    content.appendChild(estateSection);\r\n    this.elements.estateSection = estateSection;\r\n    this.elements.estateInput = estateSection.querySelector('#intestacy-estate');\r\n    this.elements.estateError = estateSection.querySelector('#intestacy-estate-error');\r\n    \r\n    // Create status input\r\n    const statusSection = document.createElement('div');\r\n    statusSection.className = 'intestacy-section intestacy-status-section';\r\n    statusSection.innerHTML = `\r\n      <label>What is your relationship status?</label>\r\n      <div class=\"intestacy-radio-group\">\r\n        <label>\r\n          <input type=\"radio\" name=\"intestacy-status\" value=\"single\"> Single\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"intestacy-status\" value=\"married\"> Married/Civil Partnership\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"intestacy-status\" value=\"cohabiting\"> Co-habiting\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"intestacy-status\" value=\"divorced\"> Divorced\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"intestacy-status\" value=\"widowed\"> Widowed\r\n        </label>\r\n      </div>\r\n    `;\r\n    content.appendChild(statusSection);\r\n    this.elements.statusSection = statusSection;\r\n    this.elements.statusInputs = statusSection.querySelectorAll('input[name=\"intestacy-status\"]');\r\n    \r\n    // Create question section\r\n    const questionSection = document.createElement('div');\r\n    questionSection.className = 'intestacy-section intestacy-question-section';\r\n    questionSection.innerHTML = `\r\n      <div class=\"intestacy-question\" id=\"intestacy-question-text\"></div>\r\n      <div class=\"intestacy-radio-group\">\r\n        <label>\r\n          <input type=\"radio\" name=\"intestacy-answer\" value=\"Yes\"> Yes\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"intestacy-answer\" value=\"No\"> No\r\n        </label>\r\n      </div>\r\n    `;\r\n    content.appendChild(questionSection);\r\n    this.elements.questionSection = questionSection;\r\n    this.elements.questionText = questionSection.querySelector('#intestacy-question-text');\r\n    this.elements.answerInputs = questionSection.querySelectorAll('input[name=\"intestacy-answer\"]');\r\n    \r\n    // Create result section\r\n    const resultSection = document.createElement('div');\r\n    resultSection.className = 'intestacy-section intestacy-result-section';\r\n    resultSection.innerHTML = `\r\n      <div class=\"intestacy-result\" id=\"intestacy-result\"></div>\r\n      <div class=\"intestacy-next-steps\">\r\n        <h2>What Next?</h2>\r\n        <p>Having a proper Will is the only way to ensure your estate is distributed according to your wishes.</p>\r\n        <div id=\"intestacy-contact-info\"></div>\r\n      </div>\r\n    `;\r\n    content.appendChild(resultSection);\r\n    this.elements.resultSection = resultSection;\r\n    this.elements.result = resultSection.querySelector('#intestacy-result');\r\n    this.elements.contactInfo = resultSection.querySelector('#intestacy-contact-info');\r\n    \r\n    // Create buttons\r\n    const buttonSection = document.createElement('div');\r\n    buttonSection.className = 'intestacy-buttons';\r\n    buttonSection.innerHTML = `\r\n      <button type=\"button\" id=\"intestacy-continue\">Continue</button>\r\n      <button type=\"button\" id=\"intestacy-restart\">Start Again</button>\r\n    `;\r\n    this.container.appendChild(buttonSection);\r\n    this.elements.continueButton = buttonSection.querySelector('#intestacy-continue');\r\n    this.elements.restartButton = buttonSection.querySelector('#intestacy-restart');\r\n    \r\n    // Create footer\r\n    const footer = document.createElement('div');\r\n    footer.className = 'intestacy-footer';\r\n    footer.innerHTML = `\r\n      <p><strong>Legal Disclaimer:</strong> This calculator provides guidance based on UK intestacy rules. \r\n      For legal advice, please consult a qualified professional.</p>\r\n    `;\r\n    this.container.appendChild(footer);\r\n    \r\n    // Hide sections initially\r\n    this.elements.estateSection.style.display = 'none';\r\n    this.elements.statusSection.style.display = 'none';\r\n    this.elements.questionSection.style.display = 'none';\r\n    this.elements.resultSection.style.display = 'none';\r\n  }\r\n  \r\n  /**\r\n   * Add event listeners to UI elements\r\n   */\r\n  addEventListeners() {\r\n    // Continue button\r\n    this.elements.continueButton.addEventListener('click', () => {\r\n      this.handleContinue();\r\n    });\r\n    \r\n    // Restart button\r\n    this.elements.restartButton.addEventListener('click', () => {\r\n      this.handleRestart();\r\n    });\r\n    \r\n    // Name input enter key\r\n    this.elements.nameInput.addEventListener('keypress', (event) => {\r\n      if (event.key === 'Enter') {\r\n        this.handleContinue();\r\n      }\r\n    });\r\n    \r\n    // Estate input enter key\r\n    this.elements.estateInput.addEventListener('keypress', (event) => {\r\n      if (event.key === 'Enter') {\r\n        this.handleContinue();\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Apply the selected theme\r\n   */\r\n  applyTheme() {\r\n    this.container.classList.add(`intestacy-theme-${this.options.theme}`);\r\n  }\r\n  \r\n  /**\r\n   * Show the name input step\r\n   */\r\n  showNameInput() {\r\n    // Update state\r\n    this.state.currentStep = 'name';\r\n    \r\n    // Show/hide sections\r\n    this.elements.nameSection.style.display = 'block';\r\n    this.elements.estateSection.style.display = 'none';\r\n    this.elements.statusSection.style.display = 'none';\r\n    this.elements.questionSection.style.display = 'none';\r\n    this.elements.resultSection.style.display = 'none';\r\n    \r\n    // Focus on input\r\n    this.elements.nameInput.focus();\r\n  }\r\n  \r\n  /**\r\n   * Show the estate value input step\r\n   */\r\n  showEstateInput() {\r\n    // Update state\r\n    this.state.currentStep = 'estate';\r\n    \r\n    // Show/hide sections\r\n    this.elements.nameSection.style.display = 'none';\r\n    this.elements.estateSection.style.display = 'block';\r\n    this.elements.statusSection.style.display = 'none';\r\n    this.elements.questionSection.style.display = 'none';\r\n    this.elements.resultSection.style.display = 'none';\r\n    \r\n    // Focus on input\r\n    this.elements.estateInput.focus();\r\n  }\r\n  \r\n  /**\r\n   * Show the relationship status input step\r\n   */\r\n  showStatusInput() {\r\n    // Update state\r\n    this.state.currentStep = 'status';\r\n    \r\n    // Show/hide sections\r\n    this.elements.nameSection.style.display = 'none';\r\n    this.elements.estateSection.style.display = 'none';\r\n    this.elements.statusSection.style.display = 'block';\r\n    this.elements.questionSection.style.display = 'none';\r\n    this.elements.resultSection.style.display = 'none';\r\n  }\r\n  \r\n  /**\r\n   * Show a question\r\n   * @param {string} questionId - The ID of the question to show\r\n   */\r\n  showQuestion(questionId) {\r\n    // Update state\r\n    this.state.currentStep = 'question';\r\n    this.state.questionId = questionId;\r\n    \r\n    // Update question text\r\n    this.elements.questionText.textContent = this.calculator.getQuestionText(questionId);\r\n    \r\n    // Clear previous answer\r\n    this.elements.answerInputs.forEach(input => {\r\n      input.checked = false;\r\n    });\r\n    \r\n    // Show/hide sections\r\n    this.elements.nameSection.style.display = 'none';\r\n    this.elements.estateSection.style.display = 'none';\r\n    this.elements.statusSection.style.display = 'none';\r\n    this.elements.questionSection.style.display = 'block';\r\n    this.elements.resultSection.style.display = 'none';\r\n    \r\n    // Ensure cohabiting warning remains visible if applicable\r\n    if (this.calculator.state.cohabiting) {\r\n      this.elements.cohabitingWarning.style.display = 'block';\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Show the result\r\n   */\r\n  showResult() {\r\n    // Calculate distribution\r\n    const resultText = this.calculator.calculateDistribution();\r\n    \r\n    // Format result with name\r\n    const formattedResult = `\r\n      <h2>Distribution Results for ${this.state.name}</h2>\r\n      <p>${resultText}</p>\r\n      <p>If you wish to change this distribution, you will need to create a Will.</p>\r\n    `;\r\n    \r\n    // Update result text\r\n    this.elements.result.innerHTML = formattedResult;\r\n    \r\n    // Update contact info\r\n    if (this.calculator.state.cohabiting) {\r\n      // Enhanced contact info for cohabiting partners\r\n      this.elements.contactInfo.innerHTML = `\r\n        <strong>URGENT:</strong> As a cohabiting partner, creating a Will is essential to protect your partner.\r\n        <br>Contact our firm at <strong>0123 456 7890</strong> or <strong>info@example.com</strong> to discuss creating a Will.\r\n      `;\r\n      \r\n      // Ensure cohabiting warning remains visible\r\n      this.elements.cohabitingWarning.style.display = 'block';\r\n    } else {\r\n      this.elements.contactInfo.textContent = this.options.contactInfo;\r\n    }\r\n    \r\n    // Show/hide sections\r\n    this.elements.nameSection.style.display = 'none';\r\n    this.elements.estateSection.style.display = 'none';\r\n    this.elements.statusSection.style.display = 'none';\r\n    this.elements.questionSection.style.display = 'none';\r\n    this.elements.resultSection.style.display = 'block';\r\n  }\r\n  \r\n  /**\r\n   * Handle the continue button click\r\n   */\r\n  handleContinue() {\r\n    switch (this.state.currentStep) {\r\n      case 'name':\r\n        this.handleNameSubmit();\r\n        break;\r\n      case 'estate':\r\n        this.handleEstateSubmit();\r\n        break;\r\n      case 'status':\r\n        this.handleStatusSubmit();\r\n        break;\r\n      case 'question':\r\n        this.handleQuestionAnswer();\r\n        break;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle name input submission\r\n   */\r\n  handleNameSubmit() {\r\n    const name = this.elements.nameInput.value;\r\n    const validation = validateName(name);\r\n    \r\n    if (!validation.isValid) {\r\n      this.elements.nameError.textContent = validation.errorMessage;\r\n      return;\r\n    }\r\n    \r\n    // Clear error\r\n    this.elements.nameError.textContent = '';\r\n    \r\n    // Update state\r\n    this.state.name = name;\r\n    \r\n    // Move to next step\r\n    this.showEstateInput();\r\n  }\r\n  \r\n  /**\r\n   * Handle estate value input submission\r\n   */\r\n  handleEstateSubmit() {\r\n    const estateValue = this.elements.estateInput.value;\r\n    const validation = validateEstateValue(estateValue);\r\n    \r\n    if (!validation.isValid) {\r\n      this.elements.estateError.textContent = validation.errorMessage;\r\n      return;\r\n    }\r\n    \r\n    // Clear error\r\n    this.elements.estateError.textContent = '';\r\n    \r\n    // Update state\r\n    this.state.estateValue = parseFloat(estateValue);\r\n    \r\n    // Move to next step\r\n    this.showStatusInput();\r\n  }\r\n  \r\n  /**\r\n   * Handle relationship status submission\r\n   */\r\n  handleStatusSubmit() {\r\n    let selectedStatus = null;\r\n    \r\n    // Find selected status\r\n    this.elements.statusInputs.forEach(input => {\r\n      if (input.checked) {\r\n        selectedStatus = input.value;\r\n      }\r\n    });\r\n    \r\n    if (!selectedStatus) {\r\n      return; // No status selected\r\n    }\r\n    \r\n    // Update calculator state\r\n    this.calculator.state.name = this.state.name;\r\n    this.calculator.state.estateValue = this.state.estateValue;\r\n    this.calculator.state.married = (selectedStatus === 'married');\r\n    this.calculator.state.cohabiting = (selectedStatus === 'cohabiting');\r\n    \r\n    // Show or hide cohabiting warning\r\n    if (selectedStatus === 'cohabiting') {\r\n      this.elements.cohabitingWarning.style.display = 'block';\r\n    } else {\r\n      this.elements.cohabitingWarning.style.display = 'none';\r\n    }\r\n    \r\n    // Start the question flow\r\n    this.showQuestion('children');\r\n  }\r\n  \r\n  /**\r\n   * Handle question answer\r\n   */\r\n  handleQuestionAnswer() {\r\n    let selectedAnswer = null;\r\n    \r\n    // Find selected answer\r\n    this.elements.answerInputs.forEach(input => {\r\n      if (input.checked) {\r\n        selectedAnswer = input.value;\r\n      }\r\n    });\r\n    \r\n    if (!selectedAnswer) {\r\n      return; // No answer selected\r\n    }\r\n    \r\n    const questionId = this.state.questionId;\r\n    const isYes = (selectedAnswer === 'Yes');\r\n    \r\n    // Update the calculator state with this answer\r\n    this.calculator.state[questionId] = isYes;\r\n    \r\n    // Process the answer and get the next question\r\n    const nextQuestionId = this.calculator.processAnswer(questionId, isYes);\r\n    \r\n    // If we have a next question, show it\r\n    if (nextQuestionId) {\r\n      this.showQuestion(nextQuestionId);\r\n    } else {\r\n      // Otherwise, we have enough information to show the result\r\n      this.showResult();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle restart button click\r\n   */\r\n  handleRestart() {\r\n    // Reset calculator\r\n    this.calculator = new IntestacyCalculator();\r\n    \r\n    // Reset state\r\n    this.state = {\r\n      currentStep: 'name',\r\n      questionId: null,\r\n      name: '',\r\n      estateValue: null\r\n    };\r\n    \r\n    // Reset inputs\r\n    this.elements.nameInput.value = '';\r\n    this.elements.estateInput.value = '';\r\n    this.elements.nameError.textContent = '';\r\n    this.elements.estateError.textContent = '';\r\n    \r\n    this.elements.statusInputs.forEach(input => {\r\n      input.checked = false;\r\n    });\r\n    \r\n    // Hide cohabiting warning\r\n    this.elements.cohabitingWarning.style.display = 'none';\r\n    \r\n    // Show first step\r\n    this.showNameInput();\r\n  }\r\n}\r\n\r\n// Export the class for use in other modules\r\nexport default IntestacyUI;","/**\r\n * ValidationUtils.js\r\n * Utility functions for input validation\r\n */\r\n\r\n/**\r\n * Validate an estate value\r\n * @param {number|string} value - The estate value to validate\r\n * @returns {Object} - Object with isValid and errorMessage properties\r\n */\r\nexport function validateEstateValue(value) {\r\n  try {\r\n    if (value === null || value === undefined || value === '') {\r\n      return { isValid: false, errorMessage: \"Please enter your estate value\" };\r\n    }\r\n    \r\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\r\n    \r\n    if (isNaN(numValue)) {\r\n      return { isValid: false, errorMessage: \"Please enter a valid number\" };\r\n    }\r\n    \r\n    if (numValue <= 0) {\r\n      return { isValid: false, errorMessage: \"Your estate value must be greater than £0\" };\r\n    }\r\n    \r\n    return { isValid: true, errorMessage: \"\" };\r\n  } catch (error) {\r\n    return { isValid: false, errorMessage: \"Please enter a valid number\" };\r\n  }\r\n}\r\n\r\n/**\r\n * Validate a name input\r\n * @param {string} value - The name to validate\r\n * @returns {Object} - Object with isValid and errorMessage properties\r\n */\r\nexport function validateName(value) {\r\n  if (!value || value.trim() === '') {\r\n    return { isValid: false, errorMessage: \"Please enter your name\" };\r\n  }\r\n  \r\n  if (value.trim().length < 2) {\r\n    return { isValid: false, errorMessage: \"Name must be at least 2 characters\" };\r\n  }\r\n  \r\n  return { isValid: true, errorMessage: \"\" };\r\n}\r\n\r\n/**\r\n * Format a number as currency with £ symbol\r\n * @param {number} amount - The amount to format\r\n * @returns {string} - Formatted currency string\r\n */\r\nexport function formatCurrency(amount) {\r\n  return new Intl.NumberFormat('en-GB', { \r\n    style: 'currency', \r\n    currency: 'GBP' \r\n  }).format(amount);\r\n}\r\n\r\n/**\r\n * Convert a string value to a boolean\r\n * @param {string} value - The value to convert (e.g., \"Yes\", \"No\")\r\n * @returns {boolean|null} - true for \"Yes\", false for \"No\", null for invalid values\r\n */\r\nexport function stringToBoolean(value) {\r\n  if (typeof value === 'boolean') {\r\n    return value;\r\n  }\r\n  \r\n  if (typeof value === 'string') {\r\n    const normalized = value.trim().toLowerCase();\r\n    if (normalized === 'yes' || normalized === 'true' || normalized === '1') {\r\n      return true;\r\n    }\r\n    if (normalized === 'no' || normalized === 'false' || normalized === '0') {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\n/**\r\n * Convert a boolean value to a string\r\n * @param {boolean} value - The boolean value to convert\r\n * @returns {string} - \"Yes\" for true, \"No\" for false\r\n */\r\nexport function booleanToString(value) {\r\n  return value === true ? \"Yes\" : \"No\";\r\n}","/**\r\n * IntestacyWidget.js\r\n * Main widget for embedding the intestacy calculator\r\n */\r\n\r\nimport IntestacyUI from '../ui/IntestacyUI.js';\r\n\r\nclass IntestacyWidget {\r\n  /**\r\n   * Create a new IntestacyWidget instance\r\n   * @param {Object} options - Configuration options\r\n   */\r\n  constructor(options = {}) {\r\n    // Default options\r\n    this.options = {\r\n      container: '#intestacy-calculator',\r\n      theme: 'light',\r\n      contactInfo: 'Please contact us to discuss creating a Will.',\r\n      contactPhone: '0123 456 7890',\r\n      contactEmail: 'info@example.com',\r\n      ...options\r\n    };\r\n    \r\n    // Initialize the widget\r\n    this.init();\r\n  }\r\n  \r\n  /**\r\n   * Initialize the widget\r\n   */\r\n  init() {\r\n    // Ensure styles are loaded\r\n    this.loadStyles();\r\n    \r\n    // Initialize UI\r\n    this.ui = new IntestacyUI(\r\n      this.options.container,\r\n      {\r\n        theme: this.options.theme,\r\n        contactInfo: this.options.contactInfo,\r\n        contactPhone: this.options.contactPhone,\r\n        contactEmail: this.options.contactEmail\r\n      }\r\n    );\r\n  }\r\n  \r\n  /**\r\n   * Load the required styles\r\n   */\r\n  loadStyles() {\r\n    // Check if styles are already loaded\r\n    if (document.getElementById('intestacy-calculator-styles')) {\r\n      return;\r\n    }\r\n    \r\n    // Create style element\r\n    const style = document.createElement('style');\r\n    style.id = 'intestacy-calculator-styles';\r\n    style.textContent = this.getStyles();\r\n    \r\n    // Append to head\r\n    document.head.appendChild(style);\r\n  }\r\n  \r\n  /**\r\n   * Get the CSS styles as a string\r\n   * @returns {string} - CSS styles\r\n   */\r\n  getStyles() {\r\n    return `\r\n      /**\r\n       * Intestacy Calculator Styles\r\n       */\r\n      \r\n      /* Base styles */\r\n      .intestacy-calculator {\r\n        font-family: Arial, sans-serif;\r\n        max-width: 800px;\r\n        margin: 0 auto;\r\n        padding: 20px;\r\n        box-sizing: border-box;\r\n      }\r\n      \r\n      .intestacy-calculator * {\r\n        box-sizing: border-box;\r\n      }\r\n      \r\n      /* Cohabiting warning styles */\r\n      .intestacy-cohabiting-warning {\r\n        background-color: #ffebee;\r\n        border: 2px solid #f44336;\r\n        color: #c62828;\r\n        padding: 20px;\r\n        margin: 20px 0;\r\n        border-radius: 6px;\r\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n        position: relative;\r\n        overflow: hidden;\r\n        animation: pulse 2s infinite;\r\n      }\r\n      \r\n      @keyframes pulse {\r\n        0% {\r\n          box-shadow: 0 0 0 0 rgba(244, 67, 54, 0.4);\r\n        }\r\n        70% {\r\n          box-shadow: 0 0 0 10px rgba(244, 67, 54, 0);\r\n        }\r\n        100% {\r\n          box-shadow: 0 0 0 0 rgba(244, 67, 54, 0);\r\n        }\r\n      }\r\n      \r\n      /* Add a left border accent for visual emphasis */\r\n      .intestacy-cohabiting-warning::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        width: 6px;\r\n        background-color: #d32f2f;\r\n      }\r\n      \r\n      .intestacy-cohabiting-warning strong:first-child {\r\n        display: block;\r\n        font-size: 18px;\r\n        margin-bottom: 10px;\r\n        color: #d32f2f;\r\n        text-transform: uppercase;\r\n        letter-spacing: 0.5px;\r\n      }\r\n      \r\n      .intestacy-cohabiting-warning p {\r\n        margin: 10px 0;\r\n        line-height: 1.5;\r\n        font-size: 15px;\r\n      }\r\n      \r\n      .intestacy-contact-highlight {\r\n        background-color: rgba(255, 255, 255, 0.7);\r\n        padding: 12px;\r\n        border-radius: 4px;\r\n        margin-top: 12px;\r\n        font-weight: bold;\r\n        border-left: 3px solid #d32f2f;\r\n      }\r\n      \r\n      .intestacy-contact-highlight strong {\r\n        color: #d32f2f;\r\n      }\r\n      \r\n      /* Header */\r\n      .intestacy-header {\r\n        margin-bottom: 30px;\r\n        text-align: center;\r\n      }\r\n      \r\n      .intestacy-header h1 {\r\n        font-size: 28px;\r\n        margin: 0 0 10px 0;\r\n        color: #333;\r\n      }\r\n      \r\n      .intestacy-header p {\r\n        font-size: 16px;\r\n        margin: 0;\r\n        color: #666;\r\n      }\r\n      \r\n      /* Content sections */\r\n      .intestacy-content {\r\n        background-color: #f9f9f9;\r\n        border-radius: 8px;\r\n        padding: 20px;\r\n        margin-bottom: 20px;\r\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n      }\r\n      \r\n      .intestacy-section {\r\n        margin-bottom: 20px;\r\n      }\r\n      \r\n      /* Form elements */\r\n      .intestacy-calculator label {\r\n        display: block;\r\n        font-size: 16px;\r\n        font-weight: bold;\r\n        margin-bottom: 8px;\r\n        color: #333;\r\n      }\r\n      \r\n      .intestacy-calculator input[type=\"text\"],\r\n      .intestacy-calculator input[type=\"number\"] {\r\n        width: 100%;\r\n        padding: 10px;\r\n        font-size: 16px;\r\n        border: 1px solid #ccc;\r\n        border-radius: 4px;\r\n        margin-bottom: 5px;\r\n      }\r\n      \r\n      .intestacy-calculator input[type=\"text\"]:focus,\r\n      .intestacy-calculator input[type=\"number\"]:focus {\r\n        border-color: #007bff;\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\r\n      }\r\n      \r\n      /* Radio buttons */\r\n      .intestacy-radio-group {\r\n        margin-top: 10px;\r\n      }\r\n      \r\n      .intestacy-radio-group label {\r\n        display: block;\r\n        font-weight: normal;\r\n        margin-bottom: 10px;\r\n        cursor: pointer;\r\n      }\r\n      \r\n      .intestacy-radio-group input[type=\"radio\"] {\r\n        margin-right: 8px;\r\n      }\r\n      \r\n      /* Error messages */\r\n      .intestacy-error {\r\n        color: #dc3545;\r\n        font-size: 14px;\r\n        margin-top: 5px;\r\n        min-height: 20px;\r\n      }\r\n      \r\n      /* Question section */\r\n      .intestacy-question {\r\n        font-size: 18px;\r\n        margin-bottom: 15px;\r\n        color: #333;\r\n      }\r\n      \r\n      /* Result section */\r\n      .intestacy-result {\r\n        background-color: #fff;\r\n        padding: 20px;\r\n        border-radius: 5px;\r\n        margin-bottom: 20px;\r\n        border-left: 4px solid #007bff;\r\n      }\r\n      \r\n      .intestacy-result h2 {\r\n        font-size: 22px;\r\n        margin-top: 0;\r\n        margin-bottom: 15px;\r\n        color: #333;\r\n      }\r\n      \r\n      .intestacy-result p {\r\n        margin-bottom: 15px;\r\n        line-height: 1.5;\r\n      }\r\n      \r\n      .intestacy-next-steps {\r\n        margin-top: 20px;\r\n      }\r\n      \r\n      .intestacy-next-steps h2 {\r\n        font-size: 20px;\r\n        margin-top: 0;\r\n        margin-bottom: 10px;\r\n        color: #333;\r\n      }\r\n      \r\n      /* Buttons */\r\n      .intestacy-buttons {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin-bottom: 20px;\r\n      }\r\n      \r\n      .intestacy-calculator button {\r\n        padding: 10px 20px;\r\n        font-size: 16px;\r\n        border: none;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n        transition: background-color 0.2s;\r\n      }\r\n      \r\n      #intestacy-continue {\r\n        background-color: #007bff;\r\n        color: white;\r\n      }\r\n      \r\n      #intestacy-continue:hover {\r\n        background-color: #0069d9;\r\n      }\r\n      \r\n      #intestacy-restart {\r\n        background-color: #6c757d;\r\n        color: white;\r\n      }\r\n      \r\n      #intestacy-restart:hover {\r\n        background-color: #5a6268;\r\n      }\r\n      \r\n      /* Footer */\r\n      .intestacy-footer {\r\n        font-size: 14px;\r\n        color: #666;\r\n        text-align: center;\r\n        margin-top: 30px;\r\n        padding-top: 15px;\r\n        border-top: 1px solid #eee;\r\n      }\r\n      \r\n      /* Light theme (default) */\r\n      .intestacy-theme-light {\r\n        /* Default styles are already light theme */\r\n      }\r\n      \r\n      /* Dark theme */\r\n      .intestacy-theme-dark {\r\n        background-color: #333;\r\n        color: #f5f5f5;\r\n      }\r\n      \r\n      .intestacy-theme-dark .intestacy-header h1 {\r\n        color: #f5f5f5;\r\n      }\r\n      \r\n      .intestacy-theme-dark .intestacy-header p {\r\n        color: #ccc;\r\n      }\r\n      \r\n      .intestacy-theme-dark .intestacy-content {\r\n        background-color: #444;\r\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\r\n      }\r\n      \r\n      .intestacy-theme-dark .intestacy-calculator label {\r\n        color: #f5f5f5;\r\n      }\r\n      \r\n      .intestacy-theme-dark .intestacy-calculator input[type=\"text\"],\r\n      .intestacy-theme-dark .intestacy-calculator input[type=\"number\"] {\r\n        background-color: #555;\r\n        border-color: #666;\r\n        color: #f5f5f5;\r\n      }\r\n      \r\n      .intestacy-theme-dark .intestacy-question {\r\n        color: #f5f5f5;\r\n      }\r\n      \r\n      .intestacy-theme-dark .intestacy-result {\r\n        background-color: #555;\r\n        border-left-color: #0d6efd;\r\n      }\r\n      \r\n      .intestacy-theme-dark .intestacy-result h2 {\r\n        color: #f5f5f5;\r\n      }\r\n      \r\n      .intestacy-theme-dark .intestacy-next-steps h2 {\r\n        color: #f5f5f5;\r\n      }\r\n      \r\n      .intestacy-theme-dark .intestacy-footer {\r\n        color: #ccc;\r\n        border-top-color: #555;\r\n      }\r\n      \r\n      /* Dark theme adjustments for cohabiting warning */\r\n      .intestacy-theme-dark .intestacy-cohabiting-warning {\r\n        background-color: rgba(244, 67, 54, 0.15);\r\n        border-color: #f44336;\r\n        color: #ff8a80;\r\n      }\r\n      \r\n      .intestacy-theme-dark .intestacy-contact-highlight {\r\n        background-color: rgba(0, 0, 0, 0.3);\r\n        color: #fff;\r\n      }\r\n      \r\n      /* Responsive styles */\r\n      @media (max-width: 768px) {\r\n        .intestacy-calculator {\r\n          padding: 15px;\r\n        }\r\n        \r\n        .intestacy-header h1 {\r\n          font-size: 24px;\r\n        }\r\n        \r\n        .intestacy-content {\r\n          padding: 15px;\r\n        }\r\n        \r\n        .intestacy-buttons {\r\n          flex-direction: column;\r\n          gap: 10px;\r\n        }\r\n        \r\n        .intestacy-calculator button {\r\n          width: 100%;\r\n        }\r\n      }\r\n      \r\n      @media (max-width: 480px) {\r\n        .intestacy-header h1 {\r\n          font-size: 22px;\r\n        }\r\n        \r\n        .intestacy-question {\r\n          font-size: 16px;\r\n        }\r\n        \r\n        .intestacy-result h2 {\r\n          font-size: 20px;\r\n        }\r\n      }\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Reset the calculator to its initial state\r\n   */\r\n  reset() {\r\n    if (this.ui) {\r\n      this.ui.handleRestart();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Update widget options\r\n   * @param {Object} options - New options to apply\r\n   */\r\n  updateOptions(options = {}) {\r\n    this.options = {\r\n      ...this.options,\r\n      ...options\r\n    };\r\n    \r\n    // Reinitialize with new options\r\n    this.init();\r\n  }\r\n}\r\n\r\n// Make available globally when included via script tag\r\nif (typeof window !== 'undefined') {\r\n  window.IntestacyWidget = IntestacyWidget;\r\n}\r\n\r\nexport default IntestacyWidget;"],"names":["IntestacyCalculator","constructor","this","STATUTORY_LEGACY","state","name","estateValue","married","cohabiting","children","grandchildren","greatGrandchildren","parentsAlive","siblings","fullSiblings","halfSiblings","grandparents","auntsUncles","fullAuntsUncles","halfAuntsUncles","currentQuestion","childrenDeceased","deceasedChildrenHadChildren","siblingsDeceasedWithChildren","auntsUnclesDeceasedWithChildren","questions","id","text","questionMap","createQuestionMap","questionFlow","defineQuestionFlow","map","forEach","question","answer","validateEstateValue","value","isValid","errorMessage","parseFloat","isNaN","error","formatCurrency","amount","Intl","NumberFormat","style","currency","format","calculateDistribution","formattedValue","getInheritanceHierarchyText","remainder","spouseShare","childrenShare","childrenText","processAnswer","questionId","getQuestionText","canDetermineDistribution","some","condition","IntestacyUI","container","options","document","querySelector","Error","theme","contactInfo","calculator","currentStep","elements","init","createUIStructure","addEventListeners","applyTheme","showNameInput","innerHTML","classList","add","contactPhone","contactEmail","header","createElement","className","appendChild","cohabitingWarning","display","content","nameSection","nameInput","nameError","estateSection","estateInput","estateError","statusSection","statusInputs","querySelectorAll","questionSection","questionText","answerInputs","resultSection","result","buttonSection","continueButton","restartButton","footer","addEventListener","handleContinue","handleRestart","event","key","focus","showEstateInput","showStatusInput","showQuestion","textContent","input","checked","showResult","resultText","formattedResult","handleNameSubmit","handleEstateSubmit","handleStatusSubmit","handleQuestionAnswer","validation","trim","length","numValue","selectedStatus","selectedAnswer","isYes","nextQuestionId","IntestacyWidget","loadStyles","ui","getElementById","getStyles","head","reset","updateOptions","window"],"mappings":"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"}